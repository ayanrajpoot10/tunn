name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Format check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          gofmt -s -l .
          echo "Please run 'go fmt ./...' to format your code"
          exit 1
        fi

    - name: Vet
      run: go vet ./...

    - name: Run tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage to Codecov
      if: github.event_name == 'push'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Exclude combinations that are not supported
          - goos: windows
            goarch: arm64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        binary_name="tunn"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          binary_name="${binary_name}.exe"
        fi
        go build -ldflags="-s -w" -o "dist/${binary_name}" .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tunn-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/
        retention-days: 7
